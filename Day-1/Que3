* Datatypes in Javascript.

A)Primitive Data Types
Primitive data types are number, string, boolean, NULL, Undefined.

1)Numbers:
A number data type can be an integer, a floating point value, an exponential value, a ‘NaN’ or a ‘Infinity’.

ex:
var a=250;  // integer value
var b=25.5;  // a number containing a decimal 
var c = 10e4 //  an exponential value which evaluates to 10*10000;

2)String:
The string data type in JavaScript can be any group of characters enclosed by a single or double-quotes or by backticks.

ex:
var str1 = “This is a string1”;  // This is a string primitive type or string literal
var str2= ‘This is a string2’;
var str3 = `This is a string3`;

3)Boolean :
The boolean data type has only two values, true and false. It is mostly used to check a logical condition. 
Thus Booleans are logical data types which can be used for comparison of two variables or to check a condition. 
The true and false implies a ‘yes’ for ‘true’ and a ‘no’ for ‘false in some places when we check a condition or the existence of a variable or a value.

ex:
var a =5;
var b=6;
a==b // returns false


4)Undefined:
Undefined data type means a variable that is not defined. The variable is declared but doesn’t contain any value.

ex:
var a;
console.log(a); // This will return undefined.


5)Null:
The null in JavaScript is a data type that is represented by only one value, the ‘null’ itself. A null value means no value.


B)The Non-Primitive Data Types:
The ‘object’ is a non-primitive data type in JavaScript. Arrays and Functions in JavaScript belong to the ‘object’ data type.

1)Object:
An object in JavaScript contains key-value pairs in its address. 
When we refer to obj1, we are actually referring to the address in memory which contains the value {a: 5, b: 6}, instead of the value {a: 5, b: 6} directly.

1
var obj1 = { a: 5, b: 6 };
We can change or mutate the value of obj1. 

obj1[a] =7;
console.log(obj1) // will return the value {a: 7, b: 6}


2)Array:
An array in JavaScript is an object data type. 
An array contains more than one value with a numerical index, where the index starts from 0. 
Thus it holds its value in a key-value pair.

ex:
var arr1= [1, 2, 3];
We cannot mutate or change the above array arr1.

3)Function:
JavaScript doesn’t have a function data type but when we find the data type of a function using the typeof operator, we find that it returns a function. 
This is because a function is an object in JavaScript. 
Ideally the data type of a function should return an object but instead, it returns a function. This is an error in JavaScript.


ex:
function add(){}
